id: nextcloud 
title: Nextcloud
version: 24.0.8
release-notes: Initial release for embassyOS!!
license: mit
wrapper-repo: https://github.com/Start9Labs/nextcloud-wrapper
upstream-repo: https://github.com/nextcloud/docker
support-site: https://github.com/nextcloud/docker/issues
marketing-site: https://nextcloud.com
build: ["make"]
description:
  short: A safe home for all your data
  long: Access & share your files, calendars, contacts, mail & more from any device, on your terms.
assets:
  license: LICENSE
  icon: icon.png
  instructions: instructions.md
main:
  type: docker
  image: main
  entrypoint: "docker_entrypoint.sh"
  args: []
  mounts:
    main: /root
    nextcloud: /var/www/html
    apps: /var/www/html/custom_apps
    config: /var/www/html/config
    data: /var/www/html/data
    theme: /var/www/html/themes/start9
    db: /var/lib/postgresql/13
    dbconfig: /etc/postgresql/13
health-checks:
  # alive:
  #   name: Web Interface
  #   success-message: The Nextcloud UI is ready to visit in a web browser
  #   type: script
  main:
    name: Web Interface
    success-message: The Nextcloud UI is accessible
    type: docker
    image: main
    entrypoint: "check-web.sh"
    args: []
    inject: true
    system: false
    io-format: json
config: 
  get:
    type: script
  set:
    type: script
properties:
  type: script
volumes:
  main:
    type: data
  nextcloud:
    type: data 
  apps:
    type: data 
  config: 
    type: data
  data: 
    type: data
  theme: 
    type: data
  db:
    type: data
  dbconfig:
    type: data
interfaces:
  main:
    name: Nextcloud Web Interface
    description: Specifies the interface to listen on for HTTP connections.
    tor-config:
      port-mapping:
        80: "80"
    lan-config:
      443:
        ssl: true
        internal: 80
    ui: true
    protocols:
      - tcp
      - http
      - udp
dependencies: {}
alerts:
  start: |
    When starting Nextcloud for the first time it may take a few minutes, please be patient! The web interface health check will indicate when the service is ready.
backup:
  create:
    type: docker
    image: compat
    system: true 
    entrypoint: compat 
    args: 
      - duplicity
      - create
      - /mnt/backup
      - /root/data
    mounts:
      BACKUP: "/mnt/backup" 
      main: "/root/data"
  restore:
    type: docker
    image: compat
    system: true
    entrypoint: compat
    args:
      - duplicity
      - restore
      - /root/data
      - /mnt/backup
    mounts:
      BACKUP: /mnt/backup
      main: /root/data
migrations:
  from:
    "*":
      type: script
      args: ["from"]
  to:
    "*":
      type: script
      args: ["to"]
